---
- name: Display facts
  hosts: backend1
  tasks:
    - name: Print all available facts
      ansible.builtin.debug:
        var: ansible_facts

- name: Install and configure a kitten web page
  hosts: backend1

  vars:
    Mon_user_eductive02: "Mon user eductive02 : le meilleur !"

  tasks:
    - name: Mise à jour des dépôts de paquets
      apt:
        update_cache: yes
    - name: Ensure package nginx is installed
      apt:
        name: nginx
        state: latest
    - name: Ensure service nginx is running
      service:
        name: nginx
        state: started
    - name: Configure Kitten Page
      template:
        src: templates/index.html
        dest: /var/www/html/index.html 

- name: Install and configure docker
  hosts: backend2
  become: true
  vars:
    container_count: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Installation docker-compose
      apt:
        name:
          - docker-compose
          - docker-compose-plugin
        state: present 
    - name: Ensure service docker is running
      service:
        name: docker
        state: started      

    - name: Install Docker Module for Python
      pip:
        name: docker
     
    - name: ifconfig.io
      copy:
        src: templates/ifconfig.io
        dest: /home/debian/

    - name: Run container
      become: True
      shell:
        cmd: "docker-compose up -d "
        chdir: /home/debian/ifconfig.io/

- name: Install and configure haproxy
  hosts: front
  become: true
  tasks:
    - name: Install Haproxy
      apt:
        name: haproxy
        state: present
    - name: Copy Haproxy Configuration file
      copy:
        src: templates/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg  


  
